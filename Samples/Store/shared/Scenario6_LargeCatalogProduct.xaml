<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="SDKTemplate.Scenario6_LargeCatalogProduct"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <ScrollViewer Margin="12,20,12,12">
            <StackPanel>
                <TextBlock Text="Large catalog product" Style="{StaticResource SampleHeaderTextStyle}"/>
                <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap">
                    If you have a large catalog of in-app products,
                    you can represent them with a single product ID
                    in the Windows Store
                    and distinguish the individual items with an offer ID.
                </TextBlock>

                <TextBlock Style="{StaticResource BasicTextStyle}" TextWrapping="Wrap" Margin="0,10,0,0" Text="Offer Id (limit 64 characters)" />
                <TextBox HorizontalAlignment="Left" x:Name="OfferIdTextBox" Margin="0,10,0,0" Width="150" Text="SDK101" MaxLength="64" />
                <TextBlock Style="{StaticResource BasicTextStyle}" TextWrapping="Wrap" Margin="0,10,0,0" Text="Display Name (limit 100 characters)" />
                <TextBox HorizontalAlignment="Left" Width="150" x:Name="DisplayNameTextBox" MaxLength="100" TextChanged="{x:Bind ProductNameChanged}"/>
                <Button Margin="0,10,0,0" Click="{x:Bind BuyAndFulfillProduct}">
                    <TextBlock>Buy <Run x:Name="ProductName"/> (<Run x:Name="ProductPrice"/>)</TextBlock>
                </Button>

            </StackPanel>
            </ScrollViewer>
        </Grid>
    
</Page>