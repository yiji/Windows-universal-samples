<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="SDKTemplate.Scenario5_AdvancedConsumableProduct"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <ScrollViewer Margin="12,20,12,12">
            <StackPanel>
                <TextBlock Text="Advanced consumable product" Style="{StaticResource SampleHeaderTextStyle}"/>
                <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap">
                    This scenario shows two different consumable in-app products.
                    Consumable products require both a purchase call and a fulfillment call per purchase.
                    For educational purposes, this scenario separates the purchase from the fulfillment
                    so that you can experiment with different situations.
                    <Bold>Do not</Bold> require a user action for fulfillment in your app.
                </TextBlock>

                <Button Margin="0,20,0,0" Click="{x:Bind ShowUnfulfilledConsumables}" Content="Show unfulfilled consumables"/>

                <TextBlock Style="{StaticResource SampleHeaderTextStyle}" Margin="0,10,0,0">
                    <Run x:Name="Product1Name"/>
                </TextBlock>
                <TextBlock Style="{StaticResource BasicTextStyle}" Margin="0,10,0,0">
                    Purchases: <Run x:Name="Product1Purchases">0</Run>.
                    Fulfilled: <Run x:Name="Product1Fulfilled">0</Run>.
                </TextBlock>
                <Button Margin="0,10,0,0" Click="{x:Bind BuyProduct1}">
                    <TextBlock Style="{StaticResource BasicTextStyle}">Buy it (<Run x:Name="Product1Price"/>) - no fulfillment</TextBlock>
                </Button>
                <Button Content="Fulfill purchase" Margin="0,10,0,0" Click="{x:Bind FulfillProduct1}"/>

                <TextBlock Style="{StaticResource SampleHeaderTextStyle}" Margin="0,10,0,0">
                    <Run x:Name="Product2Name"/>
                </TextBlock>
                <TextBlock Style="{StaticResource BasicTextStyle}" Margin="0,10,0,0">
                    Purchases: <Run x:Name="Product2Purchases">0</Run>.
                    Fulfilled: <Run x:Name="Product2Fulfilled">0</Run>.
                </TextBlock>
                <Button Margin="0,10,0,0" Click="{x:Bind BuyProduct2}">
                    <TextBlock Style="{StaticResource BasicTextStyle}">Buy it (<Run x:Name="Product2Price"/>) - no fulfillment</TextBlock>
                </Button>
                <Button Content="Fulfill purchase" Margin="0,10,0,0" Click="{x:Bind FulfillProduct2}"/>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Page>
